// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "ctrl+enter",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "git add .\u000Dgit commit -m 'saved work from quick commit'\u000D"
        },
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+r",
        "command": "-workbench.action.terminal.sendSequence",
        "when": "accessibilityModeEnabled && terminalFocus"
    },
    {
        "key": "ctrl+alt+r",
        "command": "-workbench.action.terminal.runRecentCommand",
        "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
    },
    {
        "key": "ctrl+alt+r",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "f2",
        "command": "-editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+w",
        "command": "-workbench.action.closeAllEditors"
    },
    {
        "key": "ctrl+q",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+[IntlBackslash]",
        "command": "-editor.action.inPlaceReplace.up",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+[IntlBackslash]",
        "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
        "when": "!activeEditorGroupEmpty"
    },
    {
        "key": "ctrl+tab",
        "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
        "when": "!activeEditorGroupEmpty"
    },
    {
        "key": "ctrl+[IntlBackslash]",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "ctrl+pagedown",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "ctrl+pageup",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "ctrl+shift+[IntlBackslash]",
        "command": "-breadcrumbs.focusAndSelect",
        "when": "breadcrumbsPossible && breadcrumbsVisible"
    },
    {
        "key": "ctrl+shift+[IntlBackslash]",
        "command": "-editor.action.inPlaceReplace.down",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+[IntlBackslash]",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "ctrl+shift+w",
        "command": "-workbench.action.closeWindow"
    },
    {
        "key": "ctrl+s",
        "command": "-workbench.action.files.save"
    },
    {
        "key": "ctrl+s",
        "command": "workbench.action.files.saveFiles"
    },
    {
        "key": "ctrl+alt+u",
        "command": "editor.action.transformToUppercase"
    },
    {
        "key": "ctrl+shift+c",
        "command": "-workbench.action.terminal.openNativeConsole",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-notification.acceptPrimaryAction",
        "when": "notificationToastsVisible"
    },
    {
        "key": "ctrl+shift+a",
        "command": "codeium.openChatView",
        "when": "viewContainer.workbench.view.explorer.enabled"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-codeium.openChatView",
        "when": "false"
    },
    {
        "key": "ctrl+t ctrl+t",
        "command": "terminal.focus"
    },
    {
        "key": "ctrl+e ctrl+e",
        "command": "workbench.action.focusActiveEditorGroup"
    },
    {
        "key": "ctrl+i",
        "command": "-codeium.openCodeiumCommand",
        "when": "codeium.commandEnabled && editorTextFocus && !inlineSuggestionsVisible"
    },
    {
        "key": "ctrl+shift+i",
        "command": "-codeium.openCodeiumCommand",
        "when": "codeium.commandEnabled && editorTextFocus && !inlineSuggestionsVisible"
    },
    {
        "key": "ctrl+alt+i",
        "command": "-workbench.action.chat.open",
        "when": "hasChatProvider"
    },
    {
        "key": "ctrl+shift+m",
        "command": "git.acceptMerge"
    },
    {
        "key": "ctrl+shift+m",
        "command": "-workbench.actions.view.problems",
        "when": "workbench.panel.markers.view.active"
    },
    {
        "key": "ctrl+shift+[Backslash]",
        "command": "merge-conflict.next"
    },
    {
        "key": "ctrl+numpad_add",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "ctrl+shift+=",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "ctrl+=",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "ctrl+numpad_subtract",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "ctrl+6",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && isWeb && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+shift+=",
        "command": "editor.action.goToImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+f12",
        "command": "-editor.action.goToImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+shift+j",
        "command": "-workbench.action.search.toggleQueryDetails",
        "when": "inSearchEditor || searchViewletFocus"
    },
    {
        "key": "ctrl+= ctrl+=",
        "command": "workbench.action.toggleMaximizedPanel"
    },
    {
        "key": "ctrl+shift+=",
        "command": "editor.action.revealDefinition"
    },
    {
        "key": "alt+right",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+pagedown",
        "command": "editor.action.marker.nextInFiles",
        "when": "editorFocus"
    },
    {
        "key": "f8",
        "command": "-editor.action.marker.nextInFiles",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+pagedown",
        "command": "-workbench.action.moveEditorRightInGroup"
    },
    {
        "key": "ctrl+shift+t",
        "command": "-twinny.sidebar.focus",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+[KeyM]",
        "command": "-twinny.stopGeneration",
        "when": "twinnyGeneratingText"
    },
    {
        "key": "ctrl+shift+f5",
        "command": "-workbench.action.debug.restart",
        "when": "inDebugMode"
    },
    {
        "key": "f5",
        "command": "-workbench.action.debug.continue",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f5",
        "command": "-debug.openView",
        "when": "!debuggersAvailable"
    },
    {
        "key": "ctrl+shift+f8",
        "command": "editor.action.fontZoomIn"
    },
    {
        "key": "ctrl+shift+f9",
        "command": "-workbench.action.chat.previousFileTree",
        "when": "hasChatProvider && inChat"
    },
    {
        "key": "ctrl+numpad0",
        "command": "-workbench.action.zoomReset"
    },
    {
        "key": "ctrl+shift+f7",
        "command": "editor.action.fontZoomReset"
    },
    {
        "key": "ctrl+shift+t ctrl+shift+g",
        "command": "-twinny.getGitCommitMessage"
    },
    {
        "key": "ctrl+shift+t",
        "command": "-workbench.action.reopenClosedEditor"
    },
    {
        "key": "ctrl+shift+t",
        "command": "workbench.action.reopenClosedEditor"
    },
    {
        "key": "ctrl+alt+l",
        "command": "editor.action.transformToLowercase"
    },
    {
        "key": "ctrl+m ctrl+m",
        "command": "workbench.panel.testResults.view.focus"
    },
    {
        "key": "ctrl+[Comma] ctrl+shift+l",
        "command": "-testing.coverageLastRun"
    },
    {
        "key": "ctrl+[Comma] l",
        "command": "-testing.reRunLastRun"
    },
    {
        "key": "ctrl+l l",
        "command": "testing.reRunLastRun"
    },
    {
        "key": "ctrl+l ctrl+l",
        "command": "testing.debugLastRun"
    },
    {
        "key": "ctrl+[Comma] ctrl+l",
        "command": "-testing.debugLastRun"
    },
    {
        "key": "ctrl+l a",
        "command": "testing.runAll"
    },
    {
        "key": "ctrl+[Comma] a",
        "command": "-testing.runAll"
    },
    {
        "key": "alt+x",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "ctrl+shift+6",
        "command": "-workbench.action.navigateForward",
        "when": "canNavigateForward"
    },
    {
        "key": "shift+alt+x",
        "command": "workbench.action.navigateForward",
        "when": "canNavigateForward"
    },
    {
        "key": "ctrl+8",
        "command": "-workbench.action.navigateForward",
        "when": "canNavigateForward"
    },
    {
        "key": "ctrl+j ctrl+j",
        "command": "extension.js-debug.createDebuggerTerminal"
    },
    {
        "key": "f9",
        "command": "-editor.debug.action.toggleBreakpoint",
        "when": "debuggersAvailable && disassemblyViewFocus || debuggersAvailable && editorTextFocus"
    },
    {
        "key": "f9",
        "command": "workbench.action.debug.continue"
    },
    {
        "key": "shift+alt+capslock",
        "command": "references-view.findReferences",
        "when": "editorHasReferenceProvider"
    },
    {
        "key": "shift+alt+f12",
        "command": "-references-view.findReferences",
        "when": "editorHasReferenceProvider"
    },
    {
        "key": "f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus"
    },
    {
        "key": "f12",
        "command": "-editor.gotoNextSymbolFromResult",
        "when": "hasSymbols"
    },
    {
        "key": "f12",
        "command": "-goToNextReference",
        "when": "inReferenceSearchEditor || referenceSearchVisible"
    },
    {
        "key": "f12",
        "command": "workbench.action.debug.stepOut",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "shift+f11",
        "command": "-workbench.action.debug.stepOut",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "ctrl+[Quote]",
        "command": "workbench.action.splitEditor"
    }
]